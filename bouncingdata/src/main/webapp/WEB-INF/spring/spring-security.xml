<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/security
  http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">
 
  <http use-expressions="true">
    <intercept-url pattern="/auth/*" access="permitAll" />
    <intercept-url pattern="/plfdemo/*" access="permitAll" />
    <intercept-url pattern="/resources/**" access="permitAll" />
    <intercept-url pattern="/cdn/**" access="permitAll" />
    <intercept-url pattern="/favicon.ico" access="permitAll"/>
    <intercept-url pattern="/**" access="isAuthenticated()" />
    <form-login login-page="/auth/login" default-target-url="/main"
      authentication-failure-url="/auth/failed" login-processing-url="/auth/j_spring_security_check"  />
    <http-basic />
    <logout logout-success-url="/auth/logout" logout-url="/auth/j_spring_security_logout" />
  </http>
 
  <authentication-manager>
    <authentication-provider user-service-ref="customUserDetailsService">
    
      <!-- jdbc-user-service data-source-ref="dataSource"
       users-by-username-query="select username, password, enabled from spring_users where username = ?"
       authorities-by-username-query="select u.username, ga.authority from spring_users u, spring_memberships m, 
            spring_group_authorities ga where u.username = m.username and m.group_id = ga.group_id and u.username=?" 
      /-->
      <!-- group-authorities-by-username-query=
          "select m.username, ga.authority from spring_group_authorities ga, 
          spring_memberships m where m.group_id = ga.id and m.username = ?" -->
    </authentication-provider>
  </authentication-manager>
 
</beans:beans>